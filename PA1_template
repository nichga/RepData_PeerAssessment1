# Reproducible Research: Peer Assessment 1



## Loading and preprocessing the data
##### 1. Load the data (i.e. read.csv())
##### 2. Process/transform the data (if necessary) into a format suitable for your analysis


```{r}
library(ggplot2)
library(imputeR)
Activity_Data <- read.csv('U:/activity.csv')
```


-----

## What is mean total number of steps taken per day?

```{r}
steps_By_Day <- tapply(Activity_Data$steps, Activity_Data$date, sum, na.rm=TRUE)

```

##### 1. Make a histogram of the total number of steps taken each day

```{r}
qplot(steps_By_Day, xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
```


##### 2. Calculate and report the mean and median total number of steps taken per day

```{r}
steps_By_DayMean <- mean(steps_By_Day)
steps_By_DayMedian <- median(steps_By_Day)

steps_By_DayMean 
steps_By_DayMedian 
```

## What is the average daily activity pattern?

```{r}
averageStepsPerTimeBlock <- aggregate(x=list(meanSteps=Activity_Data$steps), by=list(interval=Activity_Data$interval), FUN=mean, na.rm=TRUE)
```

##### 1. Make a time series plot

```{r}
ggplot(data=averageStepsPerTimeBlock, aes(x=interval, y=meanSteps)) +
    geom_line() +
    xlab("5-minute interval") +
    ylab("average number of steps taken") 
```



##### 2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?

```{r}
mostSteps <- which.max(averageStepsPerTimeBlock$meanSteps)
timeMostSteps <-  gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", averageStepsPerTimeBlock[mostSteps,'interval'])

mostSteps 
timeMostSteps 
```


## Imputing missing values
##### 1. Calculate and report the total number of missing values in the dataset 

```{r}
numMissingValues <- length(which(is.na(Activity_Data$steps)))
```


##### 2. Devise a strategy for filling in all of the missing values in the dataset.
##### 3. Create a new dataset that is equal to the original dataset but with the missing data filled in.

```{r}
Activity_DataImputed <- Activity_Data

```


##### 4. Make a histogram of the total number of steps taken each day 

```{r}
steps_By_DayImputed <- tapply(Activity_DataImputed$steps, Activity_DataImputed$date, sum)
qplot(steps_By_DayImputed, xlab='Total steps per day (Imputed)', ylab='Frequency using binwith 500', binwidth=500)
```


##### ... and Calculate and report the mean and median total number of steps taken per day. 

```{r}
steps_By_DayMeanImputed <- mean(steps_By_Day)
steps_By_DayMedianImputed <- median(steps_By_Day)

steps_By_DayMeanImputed 
steps_By_DayMedianImputed 
```


----

## Are there differences in activity patterns between weekdays and weekends?
##### 1. Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.


```{r}
Activity_DataImputed$dateType <-  ifelse(as.POSIXlt(Activity_DataImputed$date)$wday %in% c(0,6), 'weekend', 'weekday')
```

##### 2. Make a panel plot containing a time series plot


```{r}
averagedActivity_DataImputed <- aggregate(steps ~ interval + dateType, data=Activity_DataImputed, mean)
ggplot(averagedActivity_DataImputed, aes(interval, steps)) + 
    geom_line() + 
    facet_grid(dateType ~ .) +
    xlab("5-minute interval") + 
    ylab("avarage number of steps")
```



